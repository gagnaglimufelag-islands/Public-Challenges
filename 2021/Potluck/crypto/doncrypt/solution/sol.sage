from Crypto.Util.number import bytes_to_long, long_to_bytes
import sys

def main():
	e,N = (++3L, 27424549610900397887493215700668130582056842044278087045323467496406584840892459639602063958118074429782888319090709641781194601833655855634728397901085307567553417204961788360197760968021035808905069833620123475455236410388473914742780938585152342481195997694186269318240131381967467485556234800699327258913710850210580749449026191466223030775242091184547378174392380769908457675079430009368760169242466086415659743481484315528832853494144529563553459145852286473180667799592237738846942203087191342086406525370312599758779531565916486110666021340646766580700633008088117683903537506456285361518388076024570247735869L)
	c = int(sys.stdin.readline())
	m = bytes_to_long(b"Your FLAG is 10an{")
	P.<x> = PolynomialRing(Zmod(N), implementation='NTL')
	pol = (m + x)^e - c
	roots = pol.small_roots(epsilon=1/30)
	print("Potential solutions:")
	for root in roots:
	   print(root, long_to_bytes(m+root))
	
main()
